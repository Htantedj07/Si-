# C

import base64
exec(base64.b64decode("I3RoCgppbXBvcnQgYmFzZTY0CmV4ZWMoYmFzZTY0LmI2NGRlY29kZSgiSXlCRGIyMXdhV3hsWkNCQ2VTQk5jaUJOWVdacFlTQjhJRTExYUdGdGJXRmtJRTExZW1GdGJXbHNDaU1nUjJsMGFIVmlJQ0E2SUNCb2RIUndjem92TDJkcGRHaDFZaTVqYjIwdlRYVjZZVzF0YVd3dE5EQTBDZ3BwYlhCdmNuUWdZbUZ6WlRZMENtVjRaV01vWW1GelpUWTBMbUkyTkdSbFkyOWtaU2dpV201S2RtSlRRbTFpUjBaNllYbENjR0pZUW5aamJsRm5VbTE0YUdNeWMzTkpTRXBzWTFoV2JHTXpVVTVEYld4MFkwYzVlV1JEUW5sYVdFWXhXbGhPTUdOM01FdGFia3AyWWxOQ01HRlhNV3hKUjJ4MFkwYzVlV1JEUW5waVIxWnNZMEV3UzJGWE1YZGlNMG93U1VoU2NHSlhWVTVEYlZwNVlqSXdaMXBIUmpCYVdGSndZbGRWWjJGWE1YZGlNMG93U1VkU2FHUkhWakJoVnpGc1JGRndhR05JUVdkUVUwSkhZa2RHZW1GNWFHWllNalZvWWxkV1psaDVhMDVEYlVaM1kwTTFhMXBYU2pGYWVVRTVTVVZhYUdKSVRteEVVVzlPUTJjd1MyRkhWbWhhUjFaNVkzbEJPVWxJYzA1RGFVRm5TVU5CWjBvd1RuWmliVFZzV1ROU2NHSXlORzVQYVVGdVlUSldiR05ETVdoaVIyd3lXbE5qYzBSUmIyZEpRMEZuU1VOa1JGbFhUbTlhVXpGRVlqSTFNR050T1hOS2VtOW5Takl4YUdWRE1XaGFNbFU1VFVOamMwUlJiMmRKUTBGblNVTmtWbU5IWkhsWlYxSnNURlZzZFdNeVZtcGtXRXBzVEZaS2JHTllWbXhqTTFKNlNucHZaMHA2Ulc1TVFUQkxTVU5CWjBsRFFXNVdXRTVzWTJreFFsb3lWblZrUTJNMlNVTmtUbUl6Y0hCaVIzaG9USHBWZFUxRFFXOWhWa0p2WWpJMWJFMVVVWE5OZW5OblZsUnpaMUV4UWxaSlIyeFJZVWM1ZFZwVFFsQlZlVUY0VGxZNGQwbEhlSEJoTWxWblZGZEdha2xGT1ZSSlJtZHdTVVZHZDJOSGVHeFdNbFpwVXpKc01FeDZXWGROYVRSNFRHcFZkMGxEYUV4VFJsSk9WRU4zWjJKSGJISmFVMEpJV2xkT2NtSjVhMmRXYlZaNVl6SnNkbUpwT0hoTlF6UjNTVVV4ZGxsdGJITmFVemg0VDFWRmVrNUVXV2RWTWtadFdWaEtjRXg2V1hkTmFUUjRTbmwzVGtOcFFXZEpRMEZuU2pCR2Fsa3lWbmRrUTJNMlNVTmtNRnBZYURCTU1tZ3dZbGQzYzFsWVFuZGlSMnhxV1ZoU2NHSXlOSFpsUjJnd1lsZDNjbVZITVhOTVIwWjNZMGQ0Y0ZreVJqQmhWemwxVEROb2RHSkVkSGhRVkVGMVQxTjRjR0pYUm01YVV6a3pXbGRLZDB4SGJIUlpWMlJzVERKR2QySnRZM05MYVRoeFR6TkZPVTFETkRSS2VYZE9RMmxCWjBsRFFXZEtNRVpxV1RKV2QyUkRNVVppYlU1MldrZHNkVnA1WXpaSlEyUnVaVzFzZDB4RFFtdGFWMXB6V1ZoU2JFcDVkMDVEYVVGblNVTkJaMG93Um1wWk1sWjNaRU14VFZsWE5XNWtWMFp1V2xOak5rbERaR3hpYVRGV1ZYbDRiR0pxZEhoUVZFRjFUMU40YldOcWRIaFFWRUYxVDBOamMwUlJiMmRKUTBGblNVTmtlVnBYV214amJWWjVTbnB2WjBvelpETmtlVFZ1WWpJNWJtSkhWWFZaTWpsMFNuY3dTMGxJTUU1RFp6QkxSRkZ2VGtOdFVteGFhVUo2V2xjMWExZ3lNV3hqTTA1b1dqSldla3REYXpaRVVXOW5TVU5CWjJReWJEQmhRMEoyWTBkV2RVdERaREJpTW5Sc1ltMTRNV0p0VVhWa1NHZ3dTbmwzWjBvelNXNUxVMEpvWTNsQ2JXRlhlR3hQWnpCTFNVTkJaMGxEUVdkSlEwSjNXVmhPZW1ReU9YbGFRMEU1U1VkYWNHSkhWWFZqYlZab1drTm5jRXh1VGpCamJXeDNTME5yVGtObk1FdEpRMEZuU1VkV2RXUkhWbmxhVjFKbVkwZEdlbU16WkhaamJWRm5VRk5DZDFsWVRucGtNamw1V2tFd1MwUlJiMmRKUTBGbllWZFpaMXBYTlRCYVdFcHNXa1k1ZDFsWVRucGtNamw1V2tOQmFGQlRRbmRaV0U1NlpESTVlVnBFYjA1RGFVRm5TVU5CWjBsRFFXZGpTRXB3WW01UmIwb3JTMlJxUmpCbk9Fb3JWVzVEUWtwaWJVNTJZMjVLYkZrelVXZFZSMFo2WXpOa2RtTnRVVzVMVVRCTFNVTkJaMGxEUVdkSlEwSjZaVmhOZFZwWWFIQmtRMmR3UkZGdlRrTnBRV2RKUTBKMFlsY3daMUJUUW5sYVdFWXhXbGhPTUdONU5XNWFXRkZ2U2pKb01HUklRbnBQYVRoMlkwZEdlbVJIVm1saFZ6UjFXVEk1ZEV3elNtaGtlVGxXVmtoR1ExZEZSVEpXVTJOd1RHNVNiR1ZJVVhWak0xSjVZVmhCYjB0Uk1FdEVVVzluU1VOQloyRlhXV2RpVnpGMFNVYzFkbVJEUW5CaWFVSjNXVmhPZW1ReU9YbGFSRzlPUTJsQlowbERRV2RKUTBGblkwaEtjR0p1VVc5S0swdGtha1l3WnpoS0sxVnVRMEpLWW0xT2RtTnVTbXhaTTFGblZVZEdlbU16WkhaamJWRm5TbmxyVGtOcFFXZEpRMEZuU1VOQloyTXpiSHBNYlZZMFlWaFJiMHRSTUV0RVVXOW5SRkZ2VGtObk1FdEVVVzlPUTJ0Q2FHTklRWFZqYlRreFpFZFZiMHA1T0c1TVEwSjBXbGhTYjJJeVVucFFWbk51VWpCV1ZVcDVkMmRLTVVKUVZURlJibGhUYTA1RGJWSnNXbWxDZWxwWE5XdFlNakZzWXpOT2FGb3lWVzlMVkc5T1EybEJaMGxEUVdkaFYxbG5ZMjFXZUdSWFZucGtRelYwV2xoU2IySXlVV2RRVkRCblNqRkNVRlV4VVc1UFp6QkxTVU5CWjBsRFFXZEpRMEZuV1ZkT2FscFlUbnBZTTFKMllUSldkVWxFTUdkamJWWjRaRmRXZW1SRE5XMWlNMHAwVEcxa2JHUkRaMjVaVjA1cVdsaE9lbFpIT1hKYVZ6UnVTMUV3UzBsRFFXZEpRMEZuU1VOQloyUkhhSGxhVjBacldESnNhMGxFTUdkamJWWjRaRmRXZW1SRE5XMWlNMHAwVEcxa2JHUkRaMjVrUjJoNVdsZEdhMU5YVVc1TFVUQkxTVU5CWjBsRFFXZEpRMEZuWWxjMFoxQlRRbmxhV0VZeFdsaE9NRXh0V25aamJUQjFXakpXTUV0RFpISmhWMUkwU25sclRrTnBRV2RKUTBGblNVTkJaMGxJVW5CaVYxWm1ZVmMxTUZwWVNqSlpWM2RuVUZOQ2NHSnVVVzlqYlZaNFpGZFdlbVJETlcxaU0wcDBURzFrYkdSRFoyNWtSMngwV2xOamNFdFJNRXRFVVc5blNVTkJaMGxEUVdkSlEwSXdaVWhTWmxwdGJITmFVMEU1U1VoS2JHTllWbXhqTTFGMVdtMXNjMXBZVG1KS00xSTBaRVZhY0dKSFZXNVlVVEJMU1VOQlowbERRV2RKUTBGbllsZFdlbU15Um01YVdFMW5VRk5DTUdWSVVtWmFiV3h6V2xNMWVWcFhSbXRMUTJ0MVdrZFdhbUl5VW14TFEydDFZek5DYzJGWVVuTmhWelZzWTNsbmNFUlJiMDVEWnpCTFNVTkJaMGxEUVdkSlEwRm5aREpvY0dKSFZXZFdTRW94V2xSdlRrTnBRV2RKUTBGblNVTkJaMGxEUVdkSlEwSXdZMjVyTmtSUmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxIV25aamFVSjBXbGhPZWxsWFpHeE5VMEp3WW1sQ2RGcFlUbnBaVjJSc1kzcHZUa05wUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUjBaM1lWWTVNV050ZDJkUVUwSnRTakpvTUdSSVFucFBhVGgyV2pOS2FHTkhaM1ZhYlVacVdsZEtkbUl5YzNWWk1qbDBURE5aZUU5RE5IZE1NMUptWlROU2IyTnRWbWhhUmpsd1drZ3dka3AzTUV0SlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGbllsZFdlbU15Um01YVUwRTVTVWhPTUdOcGFIUmlhV3RuUzNsQmJrbERZMmRMZVVKMFdsaE9lbGxYWkd4TlVUQkxTVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMk5IUm5sWlZ6RnNaRWRXZVdONVFUbEpTSE51V1ZkT2FscFlUbnBZTTFKMllUSldkVXA2YjJkWlYwNXFXbGhPZWxnelVuWmhNbFoxVEVOQmJtSlhWbnBqTWtadVdsTmpOa2xITVd4ak0wNW9XakpXT1VSUmIyZEpRMEZuU1VOQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwSjVXbGhPZDJJeU5YcGFVMEU1U1VoS2JHTllWbXhqTTFKNlRHNUNkbU16VVc5WldFSndXRE5XZVdKRGQyZGFSMFl3V1ZReGQxbFlTbWhpVjFZd1dsaEtla3hEUW05YVYwWnJXbGhLZWxCWGFHeFpWMUpzWTI1TmNFUlJiMmRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZPUTJsQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZPUTJsQlowbERRV2RKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsSVVuQmlWMVYxWXpKNGJGcFlRVzlrUjJ4MFdsWTVjR0p1VW14amJscG9Za05yVGtOcFFXZEpRMEZuU1VOQlowbERRV2RKUTBKc1pVZE9iR05JVVdkU1dHaHFXbGhDTUdGWE9YVkpSMFo2U1VkVk5rUlJiMmRKUTBGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsSVFubGhWelV3UzBkWmFVbHBhMDVEYVVGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZGpTRXB3WW01UmIxcFRhMDVEYVVGblNVTkJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZGtSMngwV2xNMWVtSkhWbXhqUTJkNlRVTnJUa05uTUV0RVVXOW5TVU5CWjBsSVNteGtTRlo1WW1sQmJrcDVZMDVEYVVFNFNWVlNVRkV4VWxwVlJWVm5ZVWhTZEdKRU5FNURhVUU0WVVoU2RHSkRRbk5aVnpWdVVGTktiR0pwU1N0RVVXOW5VRWRvYkZsWFVTdEVVVzluU1VOQk9HSlhWakJaVTBKcVlVZEdlV015VmpCUVUwb3haRWRaZEU5RFNTdEVVVzluU1VOQk9HSlhWakJaVTBKMVdWY3hiRkJUU2pKaFYxWXpZMGM1ZVdSRFNXZFpNamwxWkVkV2RXUkVNR2xrTW14clpFZG5PVnBIVmpKaFYwNXNURmhrY0ZwSVVtOU1RMEp3WW0xc01HRlhSbk5NV0U1cVdWZDRiRkJVUlhWTlEwa3JSRkZ2WjBsRFFUaGtSMnd3WWtkVksyUXlWbWxqTW13d1dsTkNVRnB0V25OaFZ6VnNVRU01TUdGWVVuTmFWRFJPUTJsQlowbEVlSE5oVnpWeVNVZG9lVnBYV1RsSmJXZ3daRWhDZWs5cE9IWlpNbEoxVEcxd2VscEhWbk5oV0ZwNVRHMDFiR1JET1hWalJ6QjJXVzA1ZG1SSVRqQmpiVVozVVVSVmRVMUROSGxNTWxKd1l6TlJkbGt6VG5wTU1rcDJZak5TZW1SSVNtaGpRelYwWVZjMGRWa3pUbnBKYVVKNVdsZDNPVWx1VGpCbFYzaHNZekpvYkZwWVVXbFFaekJMU1VOQloxQklUakJsVjNoc1VHY3dTMGxEUVdkSlEwSnBZakpTTldWM01FdEpRMEZuU1VOQlowbEhTbWhaTW5SdVkyMDVNV0p0VVhSaFZ6Rm9XakpWTmtsSVZubGlRMmR1WVVoU01HTklUVFpNZVRrelpETmpkV1ZJVW5sWlYxcDJZbTFTZG1ONU5XcGlNakIyWkRKR2MySklRbWhqUjFaNVkzazVNbHBZU2pCaFYwNW9Za001TUdGSE9YbE1WRWwwV2xkM2RHSllWblZhUnpoMFlqTk9hbVJZU25aTVZFMTNUa00xY1dOSFkyNUxWSE5PUTJsQlowbERRV2RKUTBGbldXMUdhbUV5WkhsaU0xWjFXa014ZW1GWWNHeFBhVUpxWWpOYWJHTnFjMDVEWnpCTFNVTkJaMGxEUWpsRVVXOW5TVU5CWjBsRE5XcGlNalV3V1Zkc2RWcFlTamRFVVc5blNVTkJaMGxEUVdkaVYwWTBURmhrY0ZwSVVtOVBhVUV4VFVSQ2QyVkVjMDVEYVVGblNVTkJaMGxEUW1sWlYwNXlXak5LZG1SWE5XdE1WMDUyWWtjNWVVOXBRV3BKZW5OT1EybEJaMGxEUVdkSlEwSnBZak5LYTFwWVNYUmpiVVpyWVZoV2VrOXBRWGhOU0VJMFQzY3dTMGxEUVdkSlEwRm5TVWhDYUZwSFVuQmliV00yU1VSSmQyTklaemRFVVc5blNVTkJaMGxEUVdkWmJUazBURmhPYjFsWFVuWmtlbTluVFVOQmQwbEVSWGRqU0dkblkyMWthVmxUWjNkTVEwRjNURU5CZDB4RFFYZE1ha1Z3VDNjd1MwbERRV2RKUTBGblNVY3hhR050WkhCaWFtOW5UVU5DYUdSWVVuWlBkekJMU1VOQlowbERRV2RKUnpGb1kyMWtjR0pwTVRCaU0wRTJTVVJKZDJOSVp6ZEVVVzluU1VOQlowbElNRTVEYVVGblNVTkJaMHh0YUd4WlYxSnNZMjV6VGtOcFFXZEpRMEZuU1VOQ01GcFlhREJNVjBaellWZGtkVTlwUW1wYVZ6VXdXbGhKTjBSUmIyZEpRMEZuU1VOQloyTkhSbXRhUjJ4MVdua3hhV0l6VWpCaU1qQTJTVVJKZDJOSVp6ZEVVVzluU1VOQlowbElNRTVEYVVGblNVTkJaMHh0U2pCaWFURjZaRmRLZEdGWVVqZEVVVzluU1VOQlowbERRV2RrTW14clpFZG5Oa2xFUlhkTlExVTNSRkZ2WjBsRFFXZEpRMEZuWWxkR2VWb3liSFZNV0ZKMlkwUnZaMDFVUW5kbFJITk9RMmxCWjBsRFFXZG1VVEJMU1VOQlowbERRWFZhYlRsMlpFZFdlV1YzTUV0SlEwRm5TVU5CWjBsSVVteGxTRkYwV1ZkNGNGb3lORFpKUjA1c1ltNVNiR05xYzA1RGFVRm5TVU5CWjBsRFFuUlpXRXB1WVZjMGRHUkhPWGRQYVVGNVRVaENORTkzTUV0SlEwRm5TVU5CWjBsSFRuWmlSemw1VDJsQ2FtVlhSblZQZHpCTFNVTkJaMGxEUWpsRVVXOW5TVU5CT0V3elRqQmxWM2hzVUdjd1MwbEVkM1poUjFab1drUTBUa05wUVRoWmJUbHJaVlEwVGtOcFFXZEpSSGh2V2xkR2ExcFlTV2RaTW5ob1l6Tk5PVWx0YUd4WlYxSnNZMmxDZEdSRE1EQkphalJPUTJsQlowbERRVGhoUkVWbldUSjRhR016VFRsSmJURnBURlJOYVVSUmIyZEpRMEZuU1VSNGIwMXBRbXBpUjBaNlkzb3dhV0pZVVhSTmVVazRTVVIzZG1GRVJTdEVVVzluU1VOQk9Fd3lhR3haVjFKc1kybzBUa05uTUV0SlEwRm5VRWRTY0dScFFtcGlSMFo2WTNvd2FWa3lPWFZrUjBad1ltMVdlVWxxTkU1RGFVRm5TVU5CWjFCSFduWmpiVEJuV1ZkT01HRlhPWFZRVTBsMlNXbENkRnBZVW05aU1sRTVTVzVDZG1NelVXbEpSMVoxV1ROU05XTkhWVGxKYlRFeFlraFNjR05IUm5sa1F6bHRZak5LZEV4WFVtaGtSMFZwVUdjd1MwbERRV2RKUTBGblNVUjRhMkZZV1dkWk1uaG9Zek5OT1VsdE1XbE1WRTFwVUdjd1MwbERRV2RKUTBGblNVTkJaMUJIZUdoWmJWWnpTVWRhZG1OcU1HbFpWMDVxV2xoT2VsWkhPWEphVnpScFVFZG5lRWxJVGpCbFYzaHNVRk5LYW1JeWVIWmphbTluWlZkV2MySkhPVE5QZVVrclNVTkJaelJ3WVVKSlQwdFhaMmxFYVd4dlVXYzBjR0ZHU1U5TFYyaHBSR2xzYjJObk5IQmhTVWxRUTJSc05sQjNibHBsV1RoS01saHdka05rYkRaalp6aEtNbGh5VUVOa2JEWk1kMjVhWlc4NFNqSlljRk5FZDI1YVpXNDRTakpZYjNaRFpHdzFOM2R1V21WWk9Fb3lXRzlUUkdsc2IyZG5OSEJoU0VsUFMxZG9hVVJwYkc5Vlp6UndZVVZKVDB0WFoybEVhV3h2UlRoTU1uaG9XVzFXYzFCbk1FdEpRMEZuU1VOQlowbERRV2RRUjJ4MVkwaFdNRWxJVWpWalIxVTVTVzVTYkdWSVVXbEpSMDV6V1ZoT2VsQlRTbTFpTTBwMFRGZE9kbUp1VW5saU1uZHBTVWRzYTFCVFNtaFpNazVzWXpOT1ZXSXlkR3hpYVVsblltMUdkRnBVTUdsWlYwNXFXbGhPZWxaSE9YSmFWelJwU1VoS2JHTllWbkJqYlZaclVHY3dTMGxEUVdkSlEwRm5TVVIzZGxwSGJESlFaekJMU1VOQlowbERRV2RKUkhocllWaFpaMWt5ZUdoak0wMDVTVzB4YVV4VVRXbFFaekJMU1VOQlowbERRV2RKUTBGblVFZDRhRmx0Vm5OSlIxcDJZMm93YVdSSGFIbGFWMFpyVTFkUmFWQkhaM2hKU0U0d1pWZDRiRkJUU21waU1uaDJZMnB2WjJOdFZtdFBlVWtyTkhCaFJUYzNhVGMwTkU5SU5uRmxRalJNZVRaUk1EbFBWbXM0WjFOVlVXZFViRlpPVVd4S1NsRjVSR2QyVEhaeGNEUk1hV3hhUkdsc1drUnBiRnBFYVd4SlNHdDFTVUU0VERKNGFGbHRWbk5RWnpCTFNVTkJaMGxEUVdkSlEwRm5VRWRzZFdOSVZqQkpTRkkxWTBkVk9VbHVVbXhsU0ZGcFNVZE9jMWxZVG5wUVUwcHRZak5LZEV4WFRuWmlibEo1WWpKM2FVbEhiR3RRVTBvd1lVaEtiRmxYVWtwYVEwbG5ZbTFHZEZwVU1HbGtSMmg1V2xkR2ExTlhVV2xKU0Vwc1kxaFdjR050Vm10UVp6QkxTVU5CWjBsRFFXZEpSSGQyV2tkc01sQm5NRXRKUTBGblNVTkJaMGxFZUd0aFdGbG5XVEo0YUdNelRUbEpiVEZwVEZSTmFWQm5NRXRKUTBGblNVTkJaMGxEUVdkUVIzaG9XVzFXYzBsSFduWmphakJwWVRKc2EyVkRTVGhoUkVWbll6TlNOV0pIVlRsSmJVNTJZa2M1ZVU5cFFuTmhWekZzVDNsSkt6UndZVU0wY0dGRU5IQmhSalJ3WVVnMGNHRkpOSEJoVkRSd1lWTTBjR0ZTT0VveVduUXZRMlJ0YjNKM2JscHhaRGhLTW1GcWRrTmtiWEIyZDI1YWNXTTRTakpoYkM5RFpHMXZjbmR1V25GWE9Fb3lZV3AxUzFkclpVdFhhM1ZMVjJzclMxZHBUMHRYYUN0TFYyaGxTMWRuSzB0WFoyY3dTMGxFZDNaaVIwWnBXbGQzSzBSUmIyZEpRMEZuU1VOQlowbERRVGhoVnpWM1pGaFJaMlJJYkhkYVZEQnBaRWRXTkdSRFNXZFpNbmhvWXpOTk9VbHRXblpqYlRCMFdUSTVkV1JJU25aaVEwbG5ZVmRST1VsdGRIQmFTR2RwU1VjMWFHSlhWVGxKYlhSd1draG5hVWxJU214aldGWndZMjFXYTFCbk1FdEpRMEZuU1VOQlowbEVkM1phUjJ3eVVHbEJaMGxEUVdkSlEwRm5TVU5CWjBsRFFXZEpRMEZuU1VOQlowbERRV2RFVVc5blNVTkJaMGxEUVdkUVIxSndaR2xDYW1KSFJucGplakJwWWxkSmRFMTVTU3RFVVc5blNVTkJaMGxEUVdkSlEwRTRZa2RHYVZwWGQyZGFiVGw1VUZOS01HVklVa2RoVjNoc1NXcDRiMDFUUW5wa1NHeHpXbFF3YVZreU9YTmlNMGsyU1VkT2RtTnRSbk5QZVVrck5IQlRhalJ3WVVnMGNHRklTVkJEWkcxaVRIZHVXbkZXT0VveVlXdDJRMlJ0YjNwM2JscHhWVWxRUTJSdGNFaDNibHB4VHpoS01tRnRMME5rYlc4MFowcHBSSGR1V25Gak9Fb3lZV3AyUTJSdGNGaDNibHB4VHpoS01tRnFVRU5rYlhBd1p6aEtNbUZwZGtOa2JXOTJkMjVhY1dVNFNqSmhibEJEWkcxdk5HYzRTakpoYWk5RFpHMXdUSGR1V25GV09Fb3lZV3BwUkdsc2IyWnBiRzltYVd4YVJHbHNTVUZuT0VvclUzQnFkM1ppUjBacFdsZDNLMFJSYjJkSlEwRm5TVU5CWjBsRFFUaGhWelYzWkZoUloyUkliSGRhVkRCcFdtMXNjMXBUU1dkWk1uaG9Zek5OT1VsdFduWmpiVEIwV1RJNWRXUklTblppUTBsbllWZFJPVWx1VWpSa1JWcHdZa2RWYVVsSE5XaGlWMVU1U1c1U05HUkZXbkJpUjFWcFNVZEdhbGt5Vm5ka1JEQnBURzVTTkdSRFNXZGpiVlo0WkZkc2VWcFhVU3RFVVc5blNVTkJaMGxEUVdkUVF6bHJZVmhaSzBSUmIyZEpRMEZuU1VOQloxQkhVbkJrYVVKcVlrZEdlbU42TUdsaVYwbDBUWGxKSzBSUmIyZEpRMEZuU1VOQlowbERRVGhpUjBacFdsZDNaMXB0T1hsUVUwb3dZVmN4YkVscWVHOU5VMEo2WkVoc2MxcFVNR2xaTWpsellqTkpOa2xIZUhCaVYxVTNTV28zWjNKd2VtSnhaSFZsTWpadVozSndkMmM0U2pKWWIxQkRaR3czVEhkdVdtbEJPRW95V1dkUVEyUnNOamQzYmxwbE1EaEtNbGh6YVVSM2JscGxlRGhLTWxoemRrTmtiRFkzZDI1YVpUVTRTakpaYUdsRWQyNWFaVEk0U2pKWWRYbEVkMjVhYVVFNFNqSlljM1pEWkd3M1JIZHVXbVU0T0VveVdIVXZRMlJzTjBWbk5FczJZekkyYm1KdWRIVndORXMyWTFCRE9YTlpWMHBzWWtRMFRrTnBRV2RKUTBGblNVTkJaMGxFZUhCaWJrSXhaRU5DTUdWWVFteFFVMHAxWkZjeGFWcFlTV2xKUjA1eldWaE9lbEJUU20xaU0wcDBURmRPZG1KdVVubGlNbmRwU1Vkc2ExQlRTakJoVnpGc1NXbENkVmxYTVd4UVUwb3dZVmN4YkVscFFubGFXRVl4WVZoS2JGcEVORTVEYVVGblNVTkJaMGxEUVRoTU1sSndaR28wVGtOcFFXZEpRMEZuU1VOQk9GbHVWakJrUnpsMVNVaFNOV05IVlRsSmJrNHhXVzB4Y0dSRFNXZFpNbmhvWXpOTk9VbHRTakJpYVVKcFpFYzBkR05JU25CaVYwWjVaVk5DYVdSSE5IUmpNMVpwWWxkc01FbHFOM2R1V2tOVE9Fb3lVWEoyUTJSclNuWjNibHBEYlRoS01sRnZka05rYTBzd1p6aEtNbEZ0ZGtOa2EwdG1kMjVhUTJSSlVFTmthMHhFZDI1YVEyRTRTakpSYjNaRFpHdExNR2M0U2pKbWEzbEVkMjVhUTNNNFNqSlJiblpEWkd0S2VuZHVXa052T0VveVVYQXZRMlJyU2pCdFNWQkRaR3RMZG5kdVdrTmxPRW95VVc0dlEyUnJTM1ozYmxwRFpUaEtNbEZ5VUVOa2EwdEZaemhLTWxGeVVFTmthMHRNZDI1YVEzUTRTakpSYm5aRFptcEphbWxvUzBrNFRESktNV1JJVW5aaWFqUk9RMmxCWjBsRFFXZFFRemx0WWpOS2RGQm5NRXRKUTBGblVFTTVhMkZZV1N0RVVXOW5TVU5CT0ZwdE9YWmtSMVo1U1VkT2MxbFlUbnBRVTBwdFlqSTVNRnBZU1dsUVp6QkxTVU5CWjBsRFFUaGpSRFJ0V1RJNWQyVlVjMmMwY0dGRE5IQmhSRFJ3WVVZMGNHRklOSEJoU1RSd1lWUTBjR0ZUTkhCaFVqaEtNbHB6WmtOa2JYQllkMjVhY1VzNFNqSmhhbEJEWkcxd1VXYzRTakpoYkhaRFpHMXZjbmR1V25GUU9Fb3lZV3QyUTJSdGIyOW5PRW95V25RdlEyUnRjR3AzYmxweFZ6aEtNbUZxYVVSM2JscHhaRGhLTW1GdFVFTmtiWEZFZDI1YWNWZzBjR0ZTTkhCaFV6UndZVlEwY0dGSk5IQmhTRFJ3WVVZMGNHRkVOSEJoUTBSUmIyZE5ha0Y1VGtNMFoxRlhlSE5KUmtwd1dqSm9NR041UWxOYVdFNXNZMjVhYkZwRE5EaE1NMEVyUkZGdlowbERRV2RKUkhoM1VIWkRabXR3WWtOMFEwRnhORzlEYVV4elN6UTBjRzFzZDNKbmRUUnZRMmxMYVc5blVUSTVkV1J0T0dkYU0wcDJaRmhCZG1GWE5XbGlNMmRuWWtjNWFGcEhWbmxKUnpsdFdtMTRjR0p0VldkTGFYSnBaMHRKZFhkeWFtbHRZVmhEZFVNM2FXZExTWEYzY2xSM2JqVkxWMUJET1hkUVp6QkxTVU5CWjBsRFFUaGpSRFZNV2xkV2QwbEhWblZoYlRrMVlWYzFia2xEUVRoWlUwSnZZMjFXYlZCVFNrbFdWVEZPVWxaSlRrTnFkM1paVkRRNFRETkJLMFJSYjJkSlEwRTRUREphZG1JelVteGphalJPUTJsQk9Fd3lTblphU0dzclJGRnZaMGxEUVRoTU1tZ3dZbGQzSzBSUmIyZEpRMEZuU1VOamJrcDNNRXRKUTBGT1EyNU9iR0p0VW1aaVYxWjZZekpHYmxwWVRXOUxVVEJMUkZGdlRrTnRiRzFKUmpsbVltMUdkRnBXT1daSlJEQTVTVU5rWmxneU1XaGhWelZtV0hsak5rUlJiMmRKUTBGblNVZEdkMk5ETlhsa1Z6UnZZVWM1ZW1SRU1HNU5RelIzVEdwQmRVMURZM05KU0VKMlkyNVJPVTVFUVhkTlEydE9RMmxCWjBsRFFXZFpXRUozVEc1S01XSnBhR3RhVjBveFdub3hSMWxYZUhwYVUyczlJaWtwTG1SbFkyOWtaU2dwIikpLmRlY29kZSgp")).decode()
